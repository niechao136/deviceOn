app:
  description: ''
  icon: ü§ñ
  icon_background: '#FFEAD5'
  mode: workflow
  name: DeviceOn Êñ∞Â¢û‰ªªÂä°
  use_icon_as_answer_icon: false
dependencies: []
kind: app
version: 0.1.5
workflow:
  conversation_variables: []
  environment_variables: []
  features:
    file_upload:
      allowed_file_extensions:
      - .JPG
      - .JPEG
      - .PNG
      - .GIF
      - .WEBP
      - .SVG
      allowed_file_types:
      - image
      allowed_file_upload_methods:
      - local_file
      - remote_url
      enabled: false
      fileUploadConfig:
        audio_file_size_limit: 50
        batch_count_limit: 5
        file_size_limit: 15
        image_file_size_limit: 10
        video_file_size_limit: 100
        workflow_file_upload_limit: 10
      image:
        enabled: false
        number_limits: 3
        transfer_methods:
        - local_file
        - remote_url
      number_limits: 3
    opening_statement: ''
    retriever_resource:
      enabled: true
    sensitive_word_avoidance:
      enabled: false
    speech_to_text:
      enabled: false
    suggested_questions: []
    suggested_questions_after_answer:
      enabled: false
    text_to_speech:
      enabled: false
      language: ''
      voice: ''
  graph:
    edges:
    - data:
        isInIteration: false
        sourceType: http-request
        targetType: code
      id: 1743491889393-source-1743491904849-target
      source: '1743491889393'
      sourceHandle: source
      target: '1743491904849'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        sourceType: code
        targetType: end
      id: 1743491904849-source-1743491925947-target
      source: '1743491904849'
      sourceHandle: source
      target: '1743491925947'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInLoop: false
        sourceType: start
        targetType: code
      id: 1743490828636-source-1743491874908-target
      source: '1743490828636'
      sourceHandle: source
      target: '1743491874908'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        isInLoop: false
        sourceType: code
        targetType: if-else
      id: 1743491874908-source-1744620195522-target
      source: '1743491874908'
      sourceHandle: source
      target: '1744620195522'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        isInLoop: false
        sourceType: if-else
        targetType: http-request
      id: 1744620195522-true-1744620226318-target
      source: '1744620195522'
      sourceHandle: 'true'
      target: '1744620226318'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        isInLoop: false
        sourceType: http-request
        targetType: code
      id: 1744620226318-source-1744620307990-target
      source: '1744620226318'
      sourceHandle: source
      target: '1744620307990'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInLoop: false
        sourceType: if-else
        targetType: code
      id: 1744620195522-false-1744620307990-target
      source: '1744620195522'
      sourceHandle: 'false'
      target: '1744620307990'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInLoop: false
        sourceType: code
        targetType: http-request
      id: 1744620307990-source-1743491889393-target
      source: '1744620307990'
      sourceHandle: source
      target: '1743491889393'
      targetHandle: target
      type: custom
      zIndex: 0
    nodes:
    - data:
        desc: ''
        selected: false
        title: ÂºÄÂßã
        type: start
        variables:
        - label: content
          max_length: 80000
          options: []
          required: true
          type: paragraph
          variable: content
        - label: timezone
          max_length: 256
          options: []
          required: true
          type: text-input
          variable: timezone
        - label: api
          max_length: 256
          options: []
          required: true
          type: text-input
          variable: api
        - label: token
          max_length: 256
          options: []
          required: true
          type: text-input
          variable: token
      height: 168
      id: '1743490828636'
      position:
        x: -367.1428571428571
        y: 284
      positionAbsolute:
        x: -367.1428571428571
        y: 284
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        code: "function timeStringToCron(timeStr) {\n  // ÂàÜÂâ≤Êó•ÊúüÈÉ®ÂàÜÂíåÊó∂Èó¥ÈÉ®ÂàÜ\n  const [datePart,\
          \ timePart] = timeStr.split(' ');\n  if (!datePart || !timePart) {\n   \
          \ const dt = new Date()\n    const year = dt.getFullYear()\n    return `0\
          \ ${dt.getMinutes()} ${dt.getHours()} ${dt.getDate()} ${dt.getMonth() +\
          \ 1} ? ${year}-${year}`\n  }\n  // ÂàÜÂâ≤Âá∫Âπ¥„ÄÅÊúà„ÄÅÊó•\n  const [year, month, day]\
          \ = datePart.split('/');\n  // ÂàÜÂâ≤Âá∫Êó∂„ÄÅÂàÜ„ÄÅÁßí\n  const [hour, minute, second]\
          \ = timePart.split(':');\n\n  // ÊûÑÈÄ† Cron Ë°®ËææÂºèÔºåQuartz Ê†ºÂºè‰∏∫ \"ss mm HH dd MM\
          \ ? YYYY-YYYY\"\n  return `${Number(second)} ${Number(minute)} ${Number(hour)}\
          \ ${Number(day)} ${Number(month)} ? ${year}-${year}`;\n}\nfunction main({content,\
          \ timezone, api}) {\n  const res = JSON.parse(content)\n  let url = ''\n\
          \  let request = ''\n  let need_token = 0\n  const scheduleType = res.data.schedule.scheduleType\n\
          \  const actionCode = res.data.actionCode\n  const targetDevices = Array.isArray(res?.data?.targetDevices)\
          \ ? Array.from(res.data.targetDevices).map(o => {\n    return {\n      deviceId:\
          \ o.id,\n      deviceOs: o.os,\n      timezone: o.timezone,\n    };\n  })\
          \ : []\n  const baseUrl = String(api).endsWith('/api') ? String(api).slice(0,\
          \ -4) : api\n  let parameter = {}\n  const tab_name = {\n    '90021': 'Install\
          \ Software',\n    '90022': 'Uninstall Software',\n    '90071': 'Execute\
          \ Script',\n    '90081': 'Transfer Files',\n  }\n  switch (actionCode) {\n\
          \    case '90003':\n      parameter = !!res.data.audioMute ? { audioMute:\
          \ true } : { volume: Number(res.data?.value ?? 0) }\n      break\n    case\
          \ '90004':\n      parameter = { brightness: Number(res.data?.value ?? 0)\
          \ }\n      break\n    case '90021':\n    case '90022':\n    case '90071':\n\
          \    case '90081':\n      parameter = res.data?.parameter ?? {}\n      break\n\
          \  }\n  switch (res.type) {\n    case 'control_task':\n      switch (scheduleType)\
          \ {\n        case 'NONE':\n          url = '/walle/ai/onceTask/addCommonImmediateTask'\n\
          \          request = JSON.stringify({\n            actionCode,\n       \
          \     parameter,\n            targetDevices,\n          })\n          break\n\
          \        case 'ONLINE':\n          url = '/walle/ai/onceTask/addCommonOnlineTask'\n\
          \          request = JSON.stringify({\n            actionCode,\n       \
          \     parameter,\n            targetDevices,\n          })\n          break\n\
          \        case 'CRON ONCE':\n          url = '/walle/ai/onceTask/addCommonCronTask'\n\
          \          request = JSON.stringify({\n            actionCode,\n       \
          \     parameter,\n            targetDevices,\n            userTimeZone:\
          \ timezone,\n            timezoneLocalEnabled: !!res.data?.schedule?.timezoneLocalEnabled,\n\
          \            scheduleCron: timeStringToCron(res.data?.schedule?.scheduleCron)\n\
          \          })\n          break\n      }\n      break\n    case 'trigger_task':\n\
          \      url = '/walle/ai/triggerTask/addCommonTriggerTask'\n      request\
          \ = JSON.stringify({\n        actionCode,\n        baseUrl,\n        parameter,\n\
          \        targetDevices,\n      })\n      break\n    case 'ota_task':\n \
          \     const is_trigger = !!res?.data?.is_trigger\n      url = is_trigger\
          \ ? '/walle/triggerTask/add' : '/walle/task/add'\n      if (is_trigger)\
          \ {\n        need_token = 1\n        request = JSON.stringify({\n      \
          \    actionCode,\n          triggerUrlEnabled: true,\n          parameter,\n\
          \          targetDevices,\n          taskName: tab_name[actionCode] ?? '',\n\
          \        })\n      }\n      else {\n        request = JSON.stringify({\n\
          \          actionCode,\n          parameter,\n          targetDevices,\n\
          \          userTimeZone: timezone,\n          scheduleType,\n          timezoneLocalEnabled:\
          \ res.data?.schedule?.timezone === 'device',\n          scheduleCron: timeStringToCron(res.data?.schedule?.scheduleCron)\n\
          \        })\n      }\n      break\n  }\n  return {\n    request,\n    url,\n\
          \    need_token,\n  }\n}"
        code_language: javascript
        desc: ''
        outputs:
          need_token:
            children: null
            type: number
          request:
            children: null
            type: string
          url:
            children: null
            type: string
        selected: false
        title: Á°ÆËÆ§‰ªªÂä°‰ø°ÊÅØ
        type: code
        variables:
        - value_selector:
          - '1743490828636'
          - content
          variable: content
        - value_selector:
          - '1743490828636'
          - timezone
          variable: timezone
        - value_selector:
          - '1743490828636'
          - api
          variable: api
      height: 54
      id: '1743491874908'
      position:
        x: 12.571428571428612
        y: 284
      positionAbsolute:
        x: 12.571428571428612
        y: 284
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        authorization:
          config: null
          type: no-auth
        body:
          data:
          - id: key-value-1
            key: ''
            type: text
            value: '{{#1744620307990.request#}}'
          type: json
        desc: ''
        headers: Authorization:{{#1743490828636.token#}}
        method: post
        params: ''
        retry_config:
          max_retries: 3
          retry_enabled: true
          retry_interval: 100
        selected: false
        timeout:
          max_connect_timeout: 0
          max_read_timeout: 0
          max_write_timeout: 0
        title: Êñ∞Â¢û‰ªªÂä°
        type: http-request
        url: '{{#1743490828636.api#}}{{#1743491874908.url#}}'
        variables: []
      height: 142
      id: '1743491889393'
      position:
        x: 1550
        y: 284
      positionAbsolute:
        x: 1550
        y: 284
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        code: "function main({content, body, need_token, api, token}) {\n  const res\
          \ = JSON.parse(content)\n  const result = JSON.parse(body)\n  let obj =\
          \ {}\n  if (need_token === 1) {\n    obj = {\n      triggerUrl: `${api}/walle/triggerTask/execByUrl/${token}`\n\
          \    }\n  }\n  return {\n    result: JSON.stringify({\n      ...res,\n \
          \     result: {\n        ...result,\n        data: {\n          ...(result?.data\
          \ ?? {}),\n          ...obj\n        }\n      },\n    }),\n    type: '',\n\
          \  }\n}"
        code_language: javascript
        desc: ''
        outputs:
          result:
            children: null
            type: string
          type:
            children: null
            type: string
        selected: false
        title: Â§ÑÁêÜËøîÂõû‰ø°ÊÅØ
        type: code
        variables:
        - value_selector:
          - '1743490828636'
          - content
          variable: content
        - value_selector:
          - '1743491889393'
          - body
          variable: body
        - value_selector:
          - '1743491874908'
          - need_token
          variable: need_token
        - value_selector:
          - '1743490828636'
          - api
          variable: api
        - value_selector:
          - '1744620307990'
          - token
          variable: token
      height: 54
      id: '1743491904849'
      position:
        x: 1854
        y: 284
      positionAbsolute:
        x: 1854
        y: 284
      selected: true
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        desc: ''
        outputs:
        - value_selector:
          - '1743491904849'
          - result
          variable: result
        - value_selector:
          - '1743491904849'
          - type
          variable: type
        selected: false
        title: ËøîÂõûÊï∞ÊçÆ
        type: end
      height: 116
      id: '1743491925947'
      position:
        x: 2158
        y: 284
      positionAbsolute:
        x: 2158
        y: 284
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        cases:
        - case_id: 'true'
          conditions:
          - comparison_operator: '='
            id: eeb9ee46-8e9f-4adb-a684-59277040caa8
            value: '1'
            varType: number
            variable_selector:
            - '1743491874908'
            - need_token
          id: 'true'
          logical_operator: and
        desc: ''
        selected: false
        title: Êù°‰ª∂ÂàÜÊîØ
        type: if-else
      height: 126
      id: '1744620195522'
      position:
        x: 390.8571428571428
        y: 284
      positionAbsolute:
        x: 390.8571428571428
        y: 284
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        authorization:
          config: null
          type: no-auth
        body:
          data: []
          type: none
        desc: ''
        headers: Authorization:{{#1743490828636.token#}}
        method: get
        params: ''
        retry_config:
          max_retries: 3
          retry_enabled: true
          retry_interval: 100
        selected: false
        timeout:
          max_connect_timeout: 0
          max_read_timeout: 0
          max_write_timeout: 0
        title: Ëé∑ÂèñËß¶ÂèëÂûã‰ªªÂä°token
        type: http-request
        url: '{{#1743490828636.api#}}/walle/triggerTask/generateRandomTriggerUrlToken'
        variables: []
      height: 155
      id: '1744620226318'
      position:
        x: 760.5714285714287
        y: 156.85714285714283
      positionAbsolute:
        x: 760.5714285714287
        y: 156.85714285714283
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        code: "function main({request, body}) {\n  let req = request, token = ''\n\
          \  if (!!body) {\n    const obj = JSON.parse(body)\n    const data = JSON.parse(request)\n\
          \    token = obj?.msg ?? ''\n    req = JSON.stringify({\n      ...data,\n\
          \      triggerUrlToken: token\n    })\n  }\n  return {\n    request: req,\n\
          \    token,\n  }\n}"
        code_language: javascript
        desc: ''
        outputs:
          request:
            children: null
            type: string
          token:
            children: null
            type: string
        selected: false
        title: Â§ÑÁêÜtoken
        type: code
        variables:
        - value_selector:
          - '1743491874908'
          - request
          variable: request
        - value_selector:
          - '1744620226318'
          - body
          variable: body
      height: 54
      id: '1744620307990'
      position:
        x: 1246
        y: 284
      positionAbsolute:
        x: 1246
        y: 284
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    viewport:
      x: -420
      y: 239
      zoom: 0.7
