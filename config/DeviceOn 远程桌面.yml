app:
  description: ''
  icon: ü§ñ
  icon_background: '#FFEAD5'
  mode: workflow
  name: DeviceOn ËøúÁ®ãÊ°åÈù¢
  use_icon_as_answer_icon: false
dependencies:
- current_identifier: null
  type: marketplace
  value:
    marketplace_plugin_unique_identifier: langgenius/ollama:0.0.3@9ded90ac00e8510119a24be7396ba77191c9610d5e1e29f59d68fa1229822fc7
kind: app
version: 0.1.5
workflow:
  conversation_variables: []
  environment_variables: []
  features:
    file_upload:
      allowed_file_extensions:
      - .JPG
      - .JPEG
      - .PNG
      - .GIF
      - .WEBP
      - .SVG
      allowed_file_types:
      - image
      allowed_file_upload_methods:
      - local_file
      - remote_url
      enabled: false
      fileUploadConfig:
        audio_file_size_limit: 50
        batch_count_limit: 5
        file_size_limit: 15
        image_file_size_limit: 10
        video_file_size_limit: 100
        workflow_file_upload_limit: 10
      image:
        enabled: false
        number_limits: 3
        transfer_methods:
        - local_file
        - remote_url
      number_limits: 3
    opening_statement: ''
    retriever_resource:
      enabled: true
    sensitive_word_avoidance:
      enabled: false
    speech_to_text:
      enabled: false
    suggested_questions: []
    suggested_questions_after_answer:
      enabled: false
    text_to_speech:
      enabled: false
      language: ''
      voice: ''
  graph:
    edges:
    - data:
        isInIteration: false
        sourceType: start
        targetType: http-request
      id: 1743559189395-source-1743560003474-target
      source: '1743559189395'
      sourceHandle: source
      target: '1743560003474'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        sourceType: http-request
        targetType: code
      id: 1743560003474-source-1743560050237-target
      source: '1743560003474'
      sourceHandle: source
      target: '1743560050237'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        sourceType: code
        targetType: llm
      id: 1743560050237-source-1743560132465-target
      source: '1743560050237'
      sourceHandle: source
      target: '1743560132465'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        sourceType: llm
        targetType: code
      id: 1743560132465-source-1743560205449-target
      source: '1743560132465'
      sourceHandle: source
      target: '1743560205449'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        sourceType: code
        targetType: end
      id: 1743560205449-source-1743560278150-target
      source: '1743560205449'
      sourceHandle: source
      target: '1743560278150'
      targetHandle: target
      type: custom
      zIndex: 0
    nodes:
    - data:
        desc: ''
        selected: false
        title: ÂºÄÂßã
        type: start
        variables:
        - label: question
          max_length: 80000
          options: []
          required: true
          type: paragraph
          variable: question
        - label: content
          max_length: 80000
          options: []
          required: true
          type: paragraph
          variable: content
        - label: type
          max_length: 80000
          options: []
          required: true
          type: paragraph
          variable: type
        - label: timezone
          max_length: 256
          options: []
          required: true
          type: text-input
          variable: timezone
        - label: api
          max_length: 256
          options: []
          required: true
          type: text-input
          variable: api
        - label: token
          max_length: 256
          options: []
          required: true
          type: text-input
          variable: token
      height: 220
      id: '1743559189395'
      position:
        x: 30
        y: 310
      positionAbsolute:
        x: 30
        y: 310
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        authorization:
          config: null
          type: no-auth
        body:
          data: []
          type: none
        desc: ''
        headers: Authorization:{{#1743559189395.token#}}
        method: get
        params: ''
        retry_config:
          max_retries: 3
          retry_enabled: true
          retry_interval: 100
        selected: false
        timeout:
          max_connect_timeout: 0
          max_read_timeout: 0
          max_write_timeout: 0
        title: Ëé∑ÂèñËÆæÂ§áÂàóË°®
        type: http-request
        url: '{{#1743559189395.api#}}/walle/ai/device/list'
        variables: []
      height: 139
      id: '1743560003474'
      position:
        x: 334
        y: 310
      positionAbsolute:
        x: 334
        y: 310
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        code: "\nfunction convertToTimeZone(timezone) {\n  // Ê£ÄÊü•Ê†ºÂºèÊòØÂê¶‰ª• \"UTC\" ÂºÄÂ§¥\n\
          \  if (!timezone.startsWith(\"UTC\")) {\n    throw new Error(\"Êó∂Âå∫Ê†ºÂºèÂøÖÈ°ª‰ª• 'UTC'\
          \ ÂºÄÂ§¥\");\n  }\n  // Ëé∑ÂèñÁ¨¶Âè∑ÂíåÂ∞èÊó∂„ÄÅÂàÜÈíüÈÉ®ÂàÜ\n  const sign = timezone[3]; // '+' Êàñ '-'\n\
          \  if (sign !== '+' && sign !== '-') {\n    throw new Error(\"Êó†ÊïàÁöÑÊó∂Âå∫Ê†ºÂºè\"\
          );\n  }\n  const hourStr = timezone.substr(4, 2);\n  const minuteStr = timezone.substr(7,\
          \ 2);\n  const offsetHours = parseInt(hourStr, 10);\n  const offsetMinutes\
          \ = parseInt(minuteStr, 10);\n  // ËÆ°ÁÆóÊÄªÂÅèÁßªÂàÜÈíüÊï∞ÔºàÊ≠£ÂÄº‰ª£Ë°®ÊØî UTC ÊôöÔºåË¥üÂÄº‰ª£Ë°®ÊØî UTC Êó©Ôºâ\n \
          \ let totalOffset = offsetHours * 60 + offsetMinutes;\n  if (sign === '-')\
          \ {\n    totalOffset = -totalOffset;\n  }\n  // ÂΩìÂâçÁöÑ UTC ÊØ´ÁßíÊï∞ÔºàDate.now() ËøîÂõûÁöÑÊòØËá™1970Âπ¥1Êúà1Êó•\
          \ UTC ‰ª•Êù•ÁöÑÊØ´ÁßíÊï∞Ôºâ\n  const nowMs = Date.now();\n  // ÁõÆÊ†áÊó∂Âå∫ÁöÑÊØ´ÁßíÊï∞ = ÂΩìÂâç UTC ÊØ´ÁßíÊï∞ +\
          \ Êó∂Âå∫ÂÅèÁßªÂàÜÈíüÊï∞ËΩ¨Êç¢‰∏∫ÊØ´Áßí\n  const targetMs = nowMs + totalOffset * 60000;\n  const\
          \ targetDate = new Date(targetMs);\n  // ‰ΩøÁî® getUTC* ÊñπÊ≥ïÊù•ÊèêÂèñÁõÆÊ†áÊó∂Âå∫ÁöÑÂêÑÈÉ®ÂàÜ\n  const\
          \ year = targetDate.getUTCFullYear();\n  const month = String(targetDate.getUTCMonth()\
          \ + 1).padStart(2, '0'); // Êúà‰ªΩ‰ªé 0 ÂºÄÂßã\n  const day = String(targetDate.getUTCDate()).padStart(2,\
          \ '0');\n  const hours = String(targetDate.getUTCHours()).padStart(2, '0');\n\
          \  const minutes = String(targetDate.getUTCMinutes()).padStart(2, '0');\n\
          \  const seconds = String(targetDate.getUTCSeconds()).padStart(2, '0');\n\
          \n  return `${year}/${month}/${day} ${hours}:${minutes}:${seconds}`;\n}\n\
          function main({body, timezone}) {\n  const res = JSON.parse(body)\n  const\
          \ device = Array.isArray(res?.rows) ? Array.from(res.rows).map(o => {\n\
          \    return {\n      id: o.deviceId,\n      nm: o.deviceName,\n      os:\
          \ o.deviceOs,\n      ip: o.deviceIp,\n      l1: o.labelDeviceName1,\n  \
          \    l2: o.labelDeviceName2,\n      st: o.onlineStatus,\n      tz: o.timezone,\n\
          \      hw: o.hardwareError,\n      sw: o.softwareError,\n      bt: o.batteryError,\n\
          \      pp: o.peripheralsError,\n      sc: o.securityError,\n    }\n  })\
          \ : []\n  const id = Array.from(new Set(device.map(o => o.id).filter(o =>\
          \ !!o)))\n  const name = Array.from(new Set(device.map(o => o.nm).filter(o\
          \ => !!o)))\n  const ip = Array.from(new Set(device.map(o => o.ip).filter(o\
          \ => !!o)))\n  const label1 = Array.from(new Set(device.map(o => o.l1).filter(o\
          \ => !!o)))\n  const label2 = Array.from(new Set(device.map(o => o.l2).filter(o\
          \ => !!o)))\n  const date = convertToTimeZone(timezone);\n  return {\n \
          \   device: JSON.stringify(device),\n    id: JSON.stringify(id, null, 2),\n\
          \    name: JSON.stringify(name, null, 2),\n    ip: JSON.stringify(ip, null,\
          \ 2),\n    label1: JSON.stringify(label1, null, 2),\n    label2: JSON.stringify(label2,\
          \ null, 2),\n    date,\n  }\n}\n\n"
        code_language: javascript
        desc: ''
        outputs:
          date:
            children: null
            type: string
          device:
            children: null
            type: string
          id:
            children: null
            type: string
          ip:
            children: null
            type: string
          label1:
            children: null
            type: string
          label2:
            children: null
            type: string
          name:
            children: null
            type: string
        selected: false
        title: Â§ÑÁêÜËÆæÂ§áÂàóË°®
        type: code
        variables:
        - value_selector:
          - '1743560003474'
          - body
          variable: body
        - value_selector:
          - '1743559189395'
          - timezone
          variable: timezone
      height: 54
      id: '1743560050237'
      position:
        x: 638
        y: 310
      positionAbsolute:
        x: 638
        y: 310
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        context:
          enabled: true
          variable_selector:
          - '1743559189395'
          - question
        desc: ''
        model:
          completion_params:
            num_ctx: 32768
            temperature: 0
          mode: chat
          name: deepseek-r1:14b
          provider: langgenius/ollama/ollama
        prompt_template:
        - id: a813bf19-e687-459c-845f-aa2bd74cd972
          role: system
          text: "# ‰ø°ÊÅØÊèêÂèñÊèêÁ§∫ËØç\n\n## `ÈóÆÈ¢ò`: `{{#context#}}`\n\n---\n\n## Â§ÑÁêÜÊµÅÁ®ã\n\n### ËÆæÂ§á‰ø°ÊÅØÊèêÂèñ\n\
            \n1. **Âà§Êñ≠ÊòØÂê¶‰ΩøÁî®‰∏ãÊ†áÊåáÂÆöËÆæÂ§áÔºö**\n    - Â¶ÇÊûú`ÈóÆÈ¢ò`ÊñáÊú¨‰∏≠Âá∫Áé∞ËØ∏Â¶Ç `Á¨¨‰∏Ä‰∏™`„ÄÅ`Á¨¨‰∫å‰∏™` Á≠âÊåá‰ª£‰∏ãÊ†áÁöÑËØçÊó∂ÔºåÂàôËÆæÁΩÆ `assign_index\
            \ = Áõ∏Â∫îÁöÑÊï∞Â≠ó`„ÄÇ\n    - Â¶ÇÊûú`ÈóÆÈ¢ò`ÊñáÊú¨‰∏≠Âá∫Áé∞ËØ∏Â¶Ç `ÊúÄÂêé`„ÄÅ`ÂÄíÊï∞` Á≠âÊåá‰ª£ÂèçËΩ¨ÁöÑËØçÊó∂ÔºåÂàôËÆæÁΩÆ `assign_last =\
            \ true`„ÄÇ\n\n2. **Â≠óÊÆµÊèêÂèñÔºàÊâÄÊúâÂ≠óÊÆµÂùáËøîÂõûÊï∞ÁªÑÔºõËã•Êó†ÂåπÈÖçËøîÂõûÁ©∫Êï∞ÁªÑÔºâÔºö**\n\n    - **IDÂ≠óÊÆµ (`id`)Ôºö**\n\
            \        - Âú®`ÈóÆÈ¢ò`ÊñáÊú¨‰∏≠**Á≤æÁ°ÆÂåπÈÖç**`{{#1743560050237.id#}}`ÂÜÖÁöÑ‰ªª‰∏ÄÂÖÉÁ¥†ÔºåÂ∞ÜÊâÄÊúâÂåπÈÖçÈ°πÂ≠òÂÖ• `id`\
            \ Â≠óÊÆµ„ÄÇ\n\n    - **ÂêçÁß∞Â≠óÊÆµ (`name`)Ôºö**\n        - Âú®`ÈóÆÈ¢ò`ÊñáÊú¨‰∏≠**Á≤æÁ°ÆÂåπÈÖç**`{{#1743560050237.name#}}`ÂÜÖÁöÑ‰ªª‰∏ÄÂÖÉÁ¥†ÔºåÂ∞ÜÊâÄÊúâÂåπÈÖçÈ°πÂ≠òÂÖ•\
            \ `name` Â≠óÊÆµ„ÄÇ\n\n    - **IPÂ≠óÊÆµ (`ip`)Ôºö**\n        - Âú®`ÈóÆÈ¢ò`ÊñáÊú¨‰∏≠**Á≤æÁ°ÆÂåπÈÖç**`{{#1743560050237.ip#}}`ÂÜÖÁöÑ‰ªª‰∏ÄÂÖÉÁ¥†ÔºåÂ∞ÜÊâÄÊúâÂåπÈÖçÈ°πÂ≠òÂÖ•\
            \ `ip` Â≠óÊÆµ„ÄÇ\n\n3. **Êù°‰ª∂Ê†áËÆ∞Ôºö**\n\n   Ê†πÊçÆ`ÈóÆÈ¢ò`ÊñáÊú¨‰∏≠ÁöÑÊèèËø∞ËÆæÁΩÆ‰ª•‰∏ãÊ†áËÆ∞Ôºö\n    - **IDÊ†áËÆ∞ (`assign_id`)**:\n\
            \        - ÂΩì`ÈóÆÈ¢ò`‰∏≠ÂåÖÂê´ `ËÆæÂ§áID‰∏∫...`„ÄÅ`ID‰∏∫...` Á≠âÁ±ª‰ººÊèèËø∞Êó∂ ‚Üí `assign_id = true`\n\
            \    - **ÂêçÁß∞Ê†áËÆ∞ (`assign_name`)**:\n        - ÂΩì`ÈóÆÈ¢ò`‰∏≠ÂåÖÂê´ `ËÆæÂ§áÂêçÁß∞‰∏∫...`„ÄÅ`Âêç‰∏∫...`\
            \ Á≠âÁ±ª‰ººÊèèËø∞Êó∂ ‚Üí `assign_name = true`\n    - **IPÊ†áËÆ∞ (`assign_ip`)**:\n     \
            \   - ÂΩì`ÈóÆÈ¢ò`‰∏≠ÂåÖÂê´ `ËÆæÂ§áIP‰∏∫...`„ÄÅ`IP‰∏∫...` Á≠âÁ±ª‰ººÊèèËø∞Êó∂ ‚Üí `assign_ip = true`\n\n---\n\
            \n### ËØ≠Ë®ÄËÆæÁΩÆ\n\n**Ê†πÊçÆ`ÈóÆÈ¢ò`ÊñáÊú¨ËØ≠Ë®ÄËá™Âä®Á°ÆÂÆö `lang` ÂÄºÔºö**\n- ÁÆÄ‰Ωì‰∏≠Êñá ‚Üí `zh-CN`\n- ÁπÅÈ´î‰∏≠Êñá ‚Üí\
            \ `zh-TW`\n- Ëã±Êñá ‚Üí `en-US`\n- Êó•Êñá ‚Üí `ja-JP`\n\n---\n\n## ËæìÂá∫Ê†ºÂºè\nËæìÂá∫ JSON Ê†ºÂºèÂøÖÈ°ªÁ¨¶Âêà‰ª•‰∏ãÁªìÊûÑÔºö\n\
            ```json\n{\n  \"assign_index\": \"<number, ÈªòËÆ§‰∏∫-1>\",\n  \"assign_last\"\
            : \"<boolean>\",\n  \"lang\": \"<zh-CN | zh-TW | ja-JP | en-US>\",\n \
            \ \"targetDevices\": {\n    \"id\": \"<Êï∞ÁªÑ>\",\n    \"name\": \"<Êï∞ÁªÑ>\"\
            ,\n    \"ip\": \"<Êï∞ÁªÑ>\",\n    \"assign_id\": \"<boolean>\",\n    \"assign_name\"\
            : \"<boolean>\",\n    \"assign_ip\": \"<boolean>\"\n  },\n}\n```\n\n---"
        - id: a0934cdb-518e-4a39-a761-4205162e116d
          role: user
          text: '{{#context#}}'
        selected: false
        title: LLM ËøúÁ®ãÊ°åÈù¢ÂèÇÊï∞ÊèêÂèñ
        type: llm
        variables: []
        vision:
          enabled: false
      height: 90
      id: '1743560132465'
      position:
        x: 942
        y: 310
      positionAbsolute:
        x: 942
        y: 310
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        code: "/**\n * Â§ÑÁêÜËøúÁ®ãÊ°åÈù¢\n */\nfunction handleLLM(text) {\n  const regex = /```json([\\\
          s\\S]*?)```/\n  const _res = text.replaceAll(/<think>[\\s\\S]*?<\\/think>/g,\
          \ '')\n  const match = _res.match(regex);\n  const res = !!match ? match[1].trim()\
          \ : _res\n  const str = res.replaceAll(/\\/\\/.*$/gm, '').replaceAll(/\\\
          /\\*[\\s\\S]*?\\*\\//g, '')\n  let obj\n  try {\n    obj = JSON.parse(str)\n\
          \  } catch (e) {\n    obj = {}\n  }\n  return obj\n}\nfunction main({text,\
          \ device, content, type}) {\n  device = JSON.parse(device)\n  const list\
          \ = Array.isArray(device) ? Array.from(device) : []\n  const by_id = {}\n\
          \  list.forEach(o => {\n    by_id[o.id] = o\n  })\n  const obj = handleLLM(text)\n\
          \  const assign_index = Number(obj?.assign_index)\n  const assign_last =\
          \ !!obj?.assign_last\n  const id = Array.isArray(obj?.targetDevices?.id)\
          \ ? Array.from(obj.targetDevices.id) : []\n  const name = Array.isArray(obj?.targetDevices?.name)\
          \ ? Array.from(obj.targetDevices.name) : []\n  const ip = Array.isArray(obj?.targetDevices?.ip)\
          \ ? Array.from(obj.targetDevices.ip) : []\n  const assign_id = !!obj?.targetDevices?.assign_id\n\
          \  const assign_name = !!obj?.targetDevices?.assign_name\n  const assign_ip\
          \ = !!obj?.targetDevices?.assign_ip\n  let filter_id = [], filter_device\
          \ = list.map(o => o)\n  if (!!content && (type === 'find_device' || type\
          \ === 'find_error')) {\n    const obj = JSON.parse(content)\n    filter_device\
          \ = Array.isArray(obj?.data?.targetDevices) ? Array.from(obj?.data?.targetDevices).map(o\
          \ => by_id[o.id]) : []\n    if (!Number.isNaN(assign_index) && assign_index\
          \ > 0 && assign_index <= filter_device.length) {\n      let index = assign_index\
          \ - 1\n      if (assign_last) index = filter_device.length - 1 - index\n\
          \      filter_id = [filter_device[index].id]\n    }\n    if (filter_id.length\
          \ === 0 && !assign_id && !assign_name && !assign_ip\n      && id.length\
          \ === 0 && name.length === 0 && ip.length === 0) {\n      filter_id = filter_device.map(o\
          \ => o.id)\n    }\n  }\n  if (filter_id.length === 0) {\n    filter_id =\
          \ filter_device.filter(o => {\n      const match_id = id.includes(o.id)\n\
          \      const match_name = name.includes(o.nm)\n      const match_ip = ip.includes(o.ip)\n\
          \      if (!assign_id && !assign_name && !assign_ip) {\n        return match_id\
          \ || match_name || match_ip\n      }\n      let match = true\n      if (assign_id)\
          \ match = match && match_id\n      if (assign_name) match = match && match_name\n\
          \      if (assign_ip) match = match && match_ip\n      return match\n  \
          \  }).map(o => o.id)\n  }\n\n  const filter = filter_id.map(id => {\n  \
          \  const o = by_id[id]\n    return {\n      id: o.id,\n      name: o.nm,\n\
          \      os: o.os,\n      timezone: o.tz,\n      ip: o.ip,\n      status:\
          \ o.st,\n    }\n  })\n  const result = JSON.stringify({\n    type: 'remote_desktop',\n\
          \    data: {\n      ...obj,\n      targetDevices: filter,\n    },\n  })\n\
          \  const task = filter.length > 1 ? result : ''\n\n  return {\n    result,\n\
          \    content: task,\n    type: !!task ? 'remote_desktop' : '',\n    device:\
          \ obj,\n  }\n}"
        code_language: javascript
        desc: ''
        outputs:
          content:
            children: null
            type: string
          device:
            children: null
            type: object
          result:
            children: null
            type: string
          type:
            children: null
            type: string
        selected: false
        title: Â§ÑÁêÜËøúÁ®ãÊ°åÈù¢
        type: code
        variables:
        - value_selector:
          - '1743560132465'
          - text
          variable: text
        - value_selector:
          - '1743560050237'
          - device
          variable: device
        - value_selector:
          - '1743559189395'
          - content
          variable: content
        - value_selector:
          - '1743559189395'
          - type
          variable: type
      height: 54
      id: '1743560205449'
      position:
        x: 1246
        y: 310
      positionAbsolute:
        x: 1246
        y: 310
      selected: true
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        desc: ''
        outputs:
        - value_selector:
          - '1743560205449'
          - result
          variable: result
        - value_selector:
          - '1743560205449'
          - content
          variable: content
        - value_selector:
          - '1743560205449'
          - type
          variable: type
        selected: false
        title: ËøîÂõûÊï∞ÊçÆ
        type: end
      height: 142
      id: '1743560278150'
      position:
        x: 1550
        y: 310
      positionAbsolute:
        x: 1550
        y: 310
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    viewport:
      x: 70
      y: 181.99999999999994
      zoom: 0.7
